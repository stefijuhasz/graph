package handling;

import org.apache.commons.math3.linear.Array2DRowRealMatrix;

import graph.DirectedGraph;
import graph.Edge;
import graph.Vertex;

public class Main {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		DirectedGraph g = new DirectedGraph(4);
		Array2DRowRealMatrix adj;
		GraphHandler h = new GraphHandler();
		
		Edge e1 = new Edge(new Vertex("x0"),new Vertex("x1"),(double) 9);
		Edge e2 = new Edge(new Vertex("x0"),new Vertex("x2"),(double) 8);
		Edge e3 = new Edge(new Vertex("x0"),new Vertex("x3"),(double) 7);
		Edge e4 = new Edge(new Vertex("x1"),new Vertex("x0"),(double) 5);
		Edge e5 = new Edge(new Vertex("x1"),new Vertex("x2"),(double) 13);
		Edge e6 = new Edge(new Vertex("x1"),new Vertex("x3"),(double) 12);
		Edge e7 = new Edge(new Vertex("x2"),new Vertex("x0"),(double) 6);
		Edge e8 = new Edge(new Vertex("x2"),new Vertex("x1"),(double) 15);
		Edge e9 = new Edge(new Vertex("x2"),new Vertex("x3"),(double) 13);
		Edge e10 = new Edge(new Vertex("x3"),new Vertex("x0"),(double) 7);
		Edge e11 = new Edge(new Vertex("x3"),new Vertex("x1"),(double) 2);
		Edge e12 = new Edge(new Vertex("x3"),new Vertex("x2"),(double) 1);
		g.addEdge(e1);
		g.addEdge(e2);
		g.addEdge(e3);
		g.addEdge(e4);
		g.addEdge(e5);
		g.addEdge(e6);
		g.addEdge(e7);
		g.addEdge(e8);
		g.addEdge(e9);
		g.addEdge(e10);
		g.addEdge(e11);
		g.addEdge(e12);
		
		adj=h.makeAdjMx(g);
		for(int i=0;i<adj.getRowDimension();i++){
			for(int j=0;j<adj.getColumnDimension();j++){
				System.out.print(adj.getEntry(i, j)+"\t");
			}
			System.out.println();
		}
		
		System.out.println();
		adj=h.shortest(adj);
		adj = h.reduction(adj);
		g=h.makeDiGraph(adj);
		
		g=h.delred(g);
		
		for(int i=0;i<g.getEdgeList().size();i++){
			System.out.println("source: "+g.getEdgeList().get(i).getSource().getName()+" weight: " + g.getEdgeList().get(i).getWeight()+" target: "+g.getEdgeList().get(i).getTarget().getName());
		}
		
		MakeGvFile gv = new MakeGvFile();
		gv.makeFile(g);

	}

}
